// Generated by CoffeeScript 1.8.0
(function() {
  var Q, assload,
    __hasProp = {}.hasOwnProperty;

  Q = require('q');

  assload = function() {
    var instance, loaders;
    loaders = {};
    instance = {
      use: function(_loaders) {
        var loader, type;
        for (type in _loaders) {
          if (!__hasProp.call(_loaders, type)) continue;
          loader = _loaders[type];
          loaders[type] = loader;
          if (this[type] == null) {
            this[type] = {};
          }
        }
        return this;
      },
      load: function(allAssets) {
        var all, assets, data, name, type, _fn;
        all = [];
        for (type in allAssets) {
          if (!__hasProp.call(allAssets, type)) continue;
          assets = allAssets[type];
          if (loaders[type] == null) {
            return Q.reject(new Error("No loader specified for type '" + type + "'. Provide one with assets.use(...)."));
          }
          _fn = (function(_this) {
            return function(name, data) {
              return all.push(loaders[type](data).then(function(asset) {
                return _this[type][name] = asset;
              }));
            };
          })(this);
          for (name in assets) {
            if (!__hasProp.call(assets, name)) continue;
            data = assets[name];
            _fn(name, data);
          }
        }
        return Q.all(all);
      }
    };
    return instance;
  };

  module.exports = assload;

}).call(this);
